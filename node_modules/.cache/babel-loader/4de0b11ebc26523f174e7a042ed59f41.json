{"ast":null,"code":"import { combineReducers } from 'redux'; // const employeeReducer = () => {\n//     return [\n//         { name: 'Sachin', employeeId: 2408 },\n//         { name: 'Anshul', employeeId: 7868 },\n//         { name: 'Olive Yew', employeeId: 9876 },\n//         { name: 'Aida Bugg', employeeId: 2345 },\n//         { name: 'Maureen Biologis', employeeId: 9086 },\n//         { name: 'Allie Grater', employeeId: 7735 },\n//     ];\n// };\n\nconst initialValues = {\n  employeesList: []\n};\n\nfunction employeeReducer(state = initialValues, {\n  payload,\n  type\n}) {\n  switch (type) {\n    case \"ADD_TODO\":\n      if (state.todoListData[payload.key] && state.todoListData[payload.key].includes(payload.todo)) {\n        return state;\n      }\n\n      return { ...state //   todoListData: addTodo(state, payload),\n\n      };\n    //   case \"COMPLETE\":\n    //     return {\n    //       ...state,\n    //       todoCompleted: completedTodo(state, payload),\n    //       todoListData: deleteTodo(state, payload),\n    //     };\n    //   case \"TODO_TYPE_LIST\":\n    //     if (state.todoTypeList.includes(payload)) return state;\n    //     return {\n    //       ...state,\n    //       todoTypeList: addTodoDetail(state, payload),\n    //     }\n    //   case \"DELETE_TYPE_LIST\":\n    //     return {\n    //       ...state,\n    //       ...deleteTypeList(state, payload),\n    //     }\n\n    default:\n      return state;\n  }\n} // const selectedSongReducer = (selectedSong = null, action) => {\n//     if (action.type === 'SONG_SELECTED') {\n//         return action.payload;\n//     } \n//     return selectedSong;\n// }\n\n\nexport default combineReducers({\n  employees: employeeReducer // selectedSong: selectedSongReducer,\n\n}); // now it passes to provider","map":{"version":3,"sources":["/Users/sonam/learning/react-app/songs/src/reducers/index.js"],"names":["combineReducers","initialValues","employeesList","employeeReducer","state","payload","type","todoListData","key","includes","todo","employees"],"mappings":"AACA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,aAAa,EAAE;AADG,CAAtB;;AAIE,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgD;AAAEI,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAhD,EAAmE;AACjE,UAAQA,IAAR;AACE,SAAK,UAAL;AACE,UAAIF,KAAK,CAACG,YAAN,CAAmBF,OAAO,CAACG,GAA3B,KAAmCJ,KAAK,CAACG,YAAN,CAAmBF,OAAO,CAACG,GAA3B,EAAgCC,QAAhC,CAAyCJ,OAAO,CAACK,IAAjD,CAAvC,EAA+F;AAC7F,eAAON,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE,CAEP;;AAFO,OAAP;AAIJ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEE;AACE,aAAOA,KAAP;AA9BJ;AAgCD,C,CAEH;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,eAAe,CAAC;AAC3BW,EAAAA,SAAS,EAAER,eADgB,CAE3B;;AAF2B,CAAD,CAA9B,C,CAIA","sourcesContent":["\nimport { combineReducers } from 'redux';\n\n// const employeeReducer = () => {\n//     return [\n//         { name: 'Sachin', employeeId: 2408 },\n//         { name: 'Anshul', employeeId: 7868 },\n//         { name: 'Olive Yew', employeeId: 9876 },\n//         { name: 'Aida Bugg', employeeId: 2345 },\n//         { name: 'Maureen Biologis', employeeId: 9086 },\n//         { name: 'Allie Grater', employeeId: 7735 },\n//     ];\n// };\n\nconst initialValues = {\n    employeesList: [],\n  }\n\n  function employeeReducer(state = initialValues, { payload, type }) {\n    switch (type) {\n      case \"ADD_TODO\":\n        if (state.todoListData[payload.key] && state.todoListData[payload.key].includes(payload.todo)) {\n          return state;\n        }\n        return {\n          ...state,\n        //   todoListData: addTodo(state, payload),\n        };\n    //   case \"COMPLETE\":\n    //     return {\n    //       ...state,\n    //       todoCompleted: completedTodo(state, payload),\n    //       todoListData: deleteTodo(state, payload),\n    //     };\n  \n    //   case \"TODO_TYPE_LIST\":\n    //     if (state.todoTypeList.includes(payload)) return state;\n    //     return {\n    //       ...state,\n    //       todoTypeList: addTodoDetail(state, payload),\n    //     }\n  \n    //   case \"DELETE_TYPE_LIST\":\n    //     return {\n    //       ...state,\n    //       ...deleteTypeList(state, payload),\n    //     }\n  \n      default:\n        return state;\n    }\n  }\n\n// const selectedSongReducer = (selectedSong = null, action) => {\n//     if (action.type === 'SONG_SELECTED') {\n//         return action.payload;\n//     } \n//     return selectedSong;\n// }\n\nexport default combineReducers({\n    employees: employeeReducer,\n    // selectedSong: selectedSongReducer,\n});\n// now it passes to provider"]},"metadata":{},"sourceType":"module"}