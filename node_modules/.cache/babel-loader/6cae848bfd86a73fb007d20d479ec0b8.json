{"ast":null,"code":"import { combineReducers } from 'redux'; // const employeeReducer = () => {\n//     return [\n//         { name: 'Sachin', employeeId: 2408 },\n//         { name: 'Anshul', employeeId: 7868 },\n//         { name: 'Olive Yew', employeeId: 9876 },\n//         { name: 'Aida Bugg', employeeId: 2345 },\n//         { name: 'Maureen Biologis', employeeId: 9086 },\n//         { name: 'Allie Grater', employeeId: 7735 },\n//     ];\n// };\n\nconst initialValues = {\n  employees: [{\n    name: 'Sachin',\n    employeeId: 2408\n  }, {\n    name: 'Anshul',\n    employeeId: 7868\n  }, {\n    name: 'Olive Yew',\n    employeeId: 9876\n  }, {\n    name: 'Aida Bugg',\n    employeeId: 2345\n  }, {\n    name: 'Maureen Biologis',\n    employeeId: 9086\n  }, {\n    name: 'Allie Grater',\n    employeeId: 7735\n  }]\n};\n\nconst addNewEmployee = (state, payload) => {\n  const newTodoList = { ...state.todoListData\n  };\n\n  if (payload.todo) {\n    newTodoList[payload.key] = newTodoList[payload.key] ? [...newTodoList[payload.key]] : [];\n    newTodoList[payload.key].push(payload.todo);\n  }\n\n  return newTodoList;\n};\n\nfunction employeeReducer(state = initialValues, {\n  payload,\n  type\n}) {\n  switch (type) {\n    case \"ADD_EMPLOYEE\":\n      return { ...state,\n        employees: addNewEmployee(state, payload)\n      };\n\n    default:\n      return state;\n  }\n} // const selectedSongReducer = (selectedSong = null, action) => {\n//     if (action.type === 'SONG_SELECTED') {\n//         return action.payload;\n//     } \n//     return selectedSong;\n// }\n\n\nexport default combineReducers({\n  employees: employeeReducer // selectedSong: selectedSongReducer,\n\n}); // now it passes to provider","map":{"version":3,"sources":["/Users/sonam/learning/react-app/songs/src/reducers/index.js"],"names":["combineReducers","initialValues","employees","name","employeeId","addNewEmployee","state","payload","newTodoList","todoListData","todo","key","push","employeeReducer","type"],"mappings":"AACA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE,CACP;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,UAAU,EAAE;AAA9B,GADO,EAEP;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,UAAU,EAAE;AAA9B,GAFO,EAGP;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,UAAU,EAAE;AAAjC,GAHO,EAIP;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,UAAU,EAAE;AAAjC,GAJO,EAKP;AAAED,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,UAAU,EAAE;AAAxC,GALO,EAMP;AAAED,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,UAAU,EAAE;AAApC,GANO;AADO,CAAtB;;AAWE,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzC,QAAMC,WAAW,GAAG,EAAE,GAAGF,KAAK,CAACG;AAAX,GAApB;;AACA,MAAIF,OAAO,CAACG,IAAZ,EAAkB;AAChBF,IAAAA,WAAW,CAACD,OAAO,CAACI,GAAT,CAAX,GAA2BH,WAAW,CAACD,OAAO,CAACI,GAAT,CAAX,GAA2B,CAAC,GAAGH,WAAW,CAACD,OAAO,CAACI,GAAT,CAAf,CAA3B,GAA2D,EAAtF;AACAH,IAAAA,WAAW,CAACD,OAAO,CAACI,GAAT,CAAX,CAAyBC,IAAzB,CAA8BL,OAAO,CAACG,IAAtC;AACD;;AACD,SAAOF,WAAP;AACD,CAPD;;AASA,SAASK,eAAT,CAAyBP,KAAK,GAAGL,aAAjC,EAAgD;AAAEM,EAAAA,OAAF;AAAWO,EAAAA;AAAX,CAAhD,EAAmE;AACjE,UAAQA,IAAR;AACE,SAAK,cAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELJ,QAAAA,SAAS,EAAEG,cAAc,CAACC,KAAD,EAAQC,OAAR;AAFpB,OAAP;;AAKF;AACE,aAAOD,KAAP;AARJ;AAUD,C,CAEH;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,eAAe,CAAC;AAC3BE,EAAAA,SAAS,EAAEW,eADgB,CAE3B;;AAF2B,CAAD,CAA9B,C,CAIA","sourcesContent":["\nimport { combineReducers } from 'redux';\n\n// const employeeReducer = () => {\n//     return [\n//         { name: 'Sachin', employeeId: 2408 },\n//         { name: 'Anshul', employeeId: 7868 },\n//         { name: 'Olive Yew', employeeId: 9876 },\n//         { name: 'Aida Bugg', employeeId: 2345 },\n//         { name: 'Maureen Biologis', employeeId: 9086 },\n//         { name: 'Allie Grater', employeeId: 7735 },\n//     ];\n// };\n\nconst initialValues = {\n    employees: [\n        { name: 'Sachin', employeeId: 2408 },\n        { name: 'Anshul', employeeId: 7868 },\n        { name: 'Olive Yew', employeeId: 9876 },\n        { name: 'Aida Bugg', employeeId: 2345 },\n        { name: 'Maureen Biologis', employeeId: 9086 },\n        { name: 'Allie Grater', employeeId: 7735 },\n    ],\n  }\n\n  const addNewEmployee = (state, payload) => {\n    const newTodoList = { ...state.todoListData }\n    if (payload.todo) {\n      newTodoList[payload.key] = newTodoList[payload.key] ? [...newTodoList[payload.key]] : [];\n      newTodoList[payload.key].push(payload.todo);\n    }\n    return newTodoList;\n  }\n\n  function employeeReducer(state = initialValues, { payload, type }) {\n    switch (type) {\n      case \"ADD_EMPLOYEE\":\n        return {\n          ...state,\n          employees: addNewEmployee(state, payload),\n        };\n  \n      default:\n        return state;\n    }\n  }\n\n// const selectedSongReducer = (selectedSong = null, action) => {\n//     if (action.type === 'SONG_SELECTED') {\n//         return action.payload;\n//     } \n//     return selectedSong;\n// }\n\nexport default combineReducers({\n    employees: employeeReducer,\n    // selectedSong: selectedSongReducer,\n});\n// now it passes to provider"]},"metadata":{},"sourceType":"module"}