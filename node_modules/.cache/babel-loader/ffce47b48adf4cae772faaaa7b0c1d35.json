{"ast":null,"code":"import { combineReducers } from 'redux'; // const employeeReducer = () => {\n//     return [\n//         { name: 'Sachin', employeeId: 2408 },\n//         { name: 'Anshul', employeeId: 7868 },\n//         { name: 'Olive Yew', employeeId: 9876 },\n//         { name: 'Aida Bugg', employeeId: 2345 },\n//         { name: 'Maureen Biologis', employeeId: 9086 },\n//         { name: 'Allie Grater', employeeId: 7735 },\n//     ];\n// };\n\nconst initialValues = {\n  todoTypeList: [{\n    name: 'Sachin',\n    employeeId: 2408\n  }, {\n    name: 'Anshul',\n    employeeId: 7868\n  }, {\n    name: 'Olive Yew',\n    employeeId: 9876\n  }, {\n    name: 'Aida Bugg',\n    employeeId: 2345\n  }, {\n    name: 'Maureen Biologis',\n    employeeId: 9086\n  }, {\n    name: 'Allie Grater',\n    employeeId: 7735\n  }],\n  todoListData: {},\n  todoCompleted: {}\n};\n\nfunction employeeReducer(state = initialValues, {\n  payload,\n  type\n}) {\n  switch (type) {\n    case \"ADD_TODO\":\n      if (state.todoListData[payload.key] && state.todoListData[payload.key].includes(payload.todo)) {\n        return state;\n      }\n\n      return { ...state,\n        todoListData: addTodo(state, payload)\n      };\n    //   case \"COMPLETE\":\n    //     return {\n    //       ...state,\n    //       todoCompleted: completedTodo(state, payload),\n    //       todoListData: deleteTodo(state, payload),\n    //     };\n    //   case \"TODO_TYPE_LIST\":\n    //     if (state.todoTypeList.includes(payload)) return state;\n    //     return {\n    //       ...state,\n    //       todoTypeList: addTodoDetail(state, payload),\n    //     }\n    //   case \"DELETE_TYPE_LIST\":\n    //     return {\n    //       ...state,\n    //       ...deleteTypeList(state, payload),\n    //     }\n\n    default:\n      return state;\n  }\n} // const selectedSongReducer = (selectedSong = null, action) => {\n//     if (action.type === 'SONG_SELECTED') {\n//         return action.payload;\n//     } \n//     return selectedSong;\n// }\n\n\nexport default combineReducers({\n  employees: employeeReducer // selectedSong: selectedSongReducer,\n\n}); // now it passes to provider","map":{"version":3,"sources":["/Users/sonam/learning/react-app/songs/src/reducers/index.js"],"names":["combineReducers","initialValues","todoTypeList","name","employeeId","todoListData","todoCompleted","employeeReducer","state","payload","type","key","includes","todo","addTodo","employees"],"mappings":"AACA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,YAAY,EAAE,CACV;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,UAAU,EAAE;AAA9B,GADU,EAEV;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,UAAU,EAAE;AAA9B,GAFU,EAGV;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,UAAU,EAAE;AAAjC,GAHU,EAIV;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,UAAU,EAAE;AAAjC,GAJU,EAKV;AAAED,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,UAAU,EAAE;AAAxC,GALU,EAMV;AAAED,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,UAAU,EAAE;AAApC,GANU,CADI;AASlBC,EAAAA,YAAY,EAAE,EATI;AAUlBC,EAAAA,aAAa,EAAE;AAVG,CAAtB;;AAaE,SAASC,eAAT,CAAyBC,KAAK,GAAGP,aAAjC,EAAgD;AAAEQ,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAhD,EAAmE;AACjE,UAAQA,IAAR;AACE,SAAK,UAAL;AACE,UAAIF,KAAK,CAACH,YAAN,CAAmBI,OAAO,CAACE,GAA3B,KAAmCH,KAAK,CAACH,YAAN,CAAmBI,OAAO,CAACE,GAA3B,EAAgCC,QAAhC,CAAyCH,OAAO,CAACI,IAAjD,CAAvC,EAA+F;AAC7F,eAAOL,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELH,QAAAA,YAAY,EAAES,OAAO,CAACN,KAAD,EAAQC,OAAR;AAFhB,OAAP;AAIJ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEE;AACE,aAAOD,KAAP;AA9BJ;AAgCD,C,CAEH;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeR,eAAe,CAAC;AAC3Be,EAAAA,SAAS,EAAER,eADgB,CAE3B;;AAF2B,CAAD,CAA9B,C,CAIA","sourcesContent":["\nimport { combineReducers } from 'redux';\n\n// const employeeReducer = () => {\n//     return [\n//         { name: 'Sachin', employeeId: 2408 },\n//         { name: 'Anshul', employeeId: 7868 },\n//         { name: 'Olive Yew', employeeId: 9876 },\n//         { name: 'Aida Bugg', employeeId: 2345 },\n//         { name: 'Maureen Biologis', employeeId: 9086 },\n//         { name: 'Allie Grater', employeeId: 7735 },\n//     ];\n// };\n\nconst initialValues = {\n    todoTypeList: [\n        { name: 'Sachin', employeeId: 2408 },\n        { name: 'Anshul', employeeId: 7868 },\n        { name: 'Olive Yew', employeeId: 9876 },\n        { name: 'Aida Bugg', employeeId: 2345 },\n        { name: 'Maureen Biologis', employeeId: 9086 },\n        { name: 'Allie Grater', employeeId: 7735 },\n    ],\n    todoListData: {},\n    todoCompleted: {}\n  }\n\n  function employeeReducer(state = initialValues, { payload, type }) {\n    switch (type) {\n      case \"ADD_TODO\":\n        if (state.todoListData[payload.key] && state.todoListData[payload.key].includes(payload.todo)) {\n          return state;\n        }\n        return {\n          ...state,\n          todoListData: addTodo(state, payload),\n        };\n    //   case \"COMPLETE\":\n    //     return {\n    //       ...state,\n    //       todoCompleted: completedTodo(state, payload),\n    //       todoListData: deleteTodo(state, payload),\n    //     };\n  \n    //   case \"TODO_TYPE_LIST\":\n    //     if (state.todoTypeList.includes(payload)) return state;\n    //     return {\n    //       ...state,\n    //       todoTypeList: addTodoDetail(state, payload),\n    //     }\n  \n    //   case \"DELETE_TYPE_LIST\":\n    //     return {\n    //       ...state,\n    //       ...deleteTypeList(state, payload),\n    //     }\n  \n      default:\n        return state;\n    }\n  }\n\n// const selectedSongReducer = (selectedSong = null, action) => {\n//     if (action.type === 'SONG_SELECTED') {\n//         return action.payload;\n//     } \n//     return selectedSong;\n// }\n\nexport default combineReducers({\n    employees: employeeReducer,\n    // selectedSong: selectedSongReducer,\n});\n// now it passes to provider"]},"metadata":{},"sourceType":"module"}